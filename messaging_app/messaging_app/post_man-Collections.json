{
  "info": {
    "_postman_id": "8f7b3c2a-4d9e-4b1a-9c6f-3e8b5a7d2f3",
    "name": "MessagingApp",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Obtain JWT Token - User1",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{user1_username}}\",\n  \"password\": \"{{user1_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains access and refresh tokens\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('refresh');",
              "    pm.collectionVariables.set(\"user1_access_token\", jsonData.access);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Obtain JWT Token - User2",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{user2_username}}\",\n  \"password\": \"{{user2_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains access and refresh tokens\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('refresh');",
              "    pm.collectionVariables.set(\"user2_access_token\", jsonData.access);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Obtain JWT Token - User3",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"username\": \"{{user3_username}}\",\n  \"password\": \"{{user3_password}}\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/token/",
          "host": ["{{base_url}}"],
          "path": ["api", "token", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Response contains access and refresh tokens\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('access');",
              "    pm.expect(jsonData).to.have.property('refresh');",
              "    pm.collectionVariables.set(\"user3_access_token\", jsonData.access);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Create Conversation",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{user1_access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"participants\": [\"{{user2_user_id}}\"]\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Conversation created with participants\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('conversation_id');",
              "    pm.expect(jsonData.participants).to.be.an('array').that.has.lengthOf(2);",
              "    pm.collectionVariables.set(\"conversation_id\", jsonData.conversation_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Send Message",
      "request": {
        "method": "POST",
        "header": [
          {
            "key": "Content-Type",
            "value": "application/json"
          },
          {
            "key": "Authorization",
            "value": "Bearer {{user1_access_token}}"
          }
        ],
        "body": {
          "mode": "raw",
          "raw": "{\n  \"conversation\": \"{{conversation_id}}\",\n  \"message_body\": \"Hello, user2!\"\n}"
        },
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/messages/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", "{{conversation_id}}", "messages", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 201\", function () {",
              "    pm.response.to.have.status(201);",
              "});",
              "pm.test(\"Message sent successfully\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('message_id');",
              "    pm.expect(jsonData.message_body).to.equal(\"Hello, user2!\");",
              "    pm.expect(jsonData.sender.user_id).to.equal(\"{{user1_user_id}}\");",
              "    pm.collectionVariables.set(\"message_id\", jsonData.message_id);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "List Conversations",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Conversations retrieved\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.be.an('array');",
              "    pm.expect(jsonData.length).to.be.at.least(1);",
              "    pm.expect(jsonData[0]).to.have.property('conversation_id', \"{{conversation_id}}\");",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Get Conversation Detail",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user1_access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", "{{conversation_id}}", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 200\", function () {",
              "    pm.response.to.have.status(200);",
              "});",
              "pm.test(\"Conversation details retrieved\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('conversation_id', \"{{conversation_id}}\");",
              "    pm.expect(jsonData.participants).to.be.an('array').that.has.lengthOf(2);",
              "    pm.expect(jsonData.messages).to.be.an('array').that.has.lengthOf.at.least(1);",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Unauthorized - No Token",
      "request": {
        "method": "GET",
        "header": [],
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", "{{conversation_id}}", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 401\", function () {",
              "    pm.response.to.have.status(401);",
              "});",
              "pm.test(\"Unauthorized access denied\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('detail').that.includes('Authentication credentials were not provided');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    },
    {
      "name": "Unauthorized - Non-Participant",
      "request": {
        "method": "GET",
        "header": [
          {
            "key": "Authorization",
            "value": "Bearer {{user3_access_token}}"
          }
        ],
        "url": {
          "raw": "{{base_url}}/api/conversations/{{conversation_id}}/",
          "host": ["{{base_url}}"],
          "path": ["api", "conversations", "{{conversation_id}}", ""]
        }
      },
      "response": [],
      "event": [
        {
          "listen": "test",
          "script": {
            "exec": [
              "pm.test(\"Status code is 403\", function () {",
              "    pm.response.to.have.status(403);",
              "});",
              "pm.test(\"Non-participant access denied\", function () {",
              "    var jsonData = pm.response.json();",
              "    pm.expect(jsonData).to.have.property('detail').that.includes('You do not have permission');",
              "});"
            ],
            "type": "text/javascript"
          }
        }
      ]
    }
  ],
  "variable": [
    {
      "key": "user1_access_token",
      "value": ""
    },
    {
      "key": "user2_access_token",
      "value": ""
    },
    {
      "key": "user3_access_token",
      "value": ""
    },
    {
      "key": "conversation_id",
      "value": ""
    },
    {
      "key": "message_id",
      "value": ""
    }
  ]
}